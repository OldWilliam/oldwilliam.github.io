{"meta":{"title":"JimWave的博客","subtitle":"enjoy it","description":"enjoy it","author":"JimWave","url":"www.baidu.com"},"pages":[{"title":"categories","date":"2018-01-01T16:22:16.000Z","updated":"2018-01-01T17:43:42.000Z","comments":true,"path":"categories/index.html","permalink":"www.baidu.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-01-01T16:22:05.000Z","updated":"2018-01-01T17:41:00.000Z","comments":true,"path":"tags/index.html","permalink":"www.baidu.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"fresco","date":"2018-03-24T12:26:52.000Z","updated":"2018-03-24T12:26:53.000Z","comments":true,"path":"2018/03/24/fresco/","link":"","permalink":"www.baidu.com/2018/03/24/fresco/","excerpt":"","text":"一些概念Drawees DraweeView，View层，默认实现类1- DraweeHierarchy Model层，持有Drawable等，Drawable是AndroidFramework抽象出来的可画对象的意思，默认实现类```GenericDraweeHierarchy DraweeController 负责处理交互并展现到DrweeView，默认实现类12345678910- DraweeControllerBuilder 建造者模式，DraweeController有太多可配置参数&gt; Drawees 负责图片的呈现。它由三个元素组成，有点像MVC模式。### ImagePipeLine- Bitmap处理方式的抽象，各种缓存策略等等。- ImagePipeline就是一个加载图片的组件，如果有可能，甚至可以拿出来让其他图片加载框架用。比如Volley的图片加载组件。# 使用官方用法， Uri uri = Uri.parse(“https://raw.githubusercontent.com/facebook/fresco/gh-pages/static/logo.png“);SimpleDraweeView draweeView = (SimpleDraweeView) findViewById(R.id.my_image_view);draweeView.setImageURI(uri);12其实最后都是一个套路给View一个Controller，想当于View层换了一个Pontroller public void setImageURI(Uri uri, @Nullable Object callerContext) { DraweeController controller = mSimpleDraweeControllerBuilder .setCallerContext(callerContext) .setUri(uri) .setOldController(getController()) .build(); setController(controller);}``` 参考 源码解析 FrescoDemo","categories":[],"tags":[]},{"title":"HelloWorld","slug":"HelloWorld","date":"2018-01-01T16:24:26.000Z","updated":"2018-03-24T12:37:53.000Z","comments":true,"path":"2018/01/02/HelloWorld/","link":"","permalink":"www.baidu.com/2018/01/02/HelloWorld/","excerpt":"","text":"今天是新年的第二天Fuck aijalsjflaslj","categories":[],"tags":[]}]}